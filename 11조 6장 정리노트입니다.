반복문은 동일한 내용을 반복하거나 일정한 규칙으로 반복하는 일을 수행할 때 사용하고,
프로그램을 좀 더 간결하고 실제적으로 작성할 수 있습니다.
반복문이 필요한 경우는 동일한 내용을 반복할때, 일정한 규칙으로 반복하는 일을 수행할 때이다.
for문은 특정한 문장을 일정한 횟수만큼 반복시킬 때 사용한다.
for문의 기본 형식과 실행 순서는 for(초기화; 조건식; 증감식)
{ 명령문1; 명령문2; }다.
일정한 규칙으로 반복하는 for은  초깃값과 조건은 경우에 따라 다르게 표현 가능한=다.
 실행문이 없는 FOR문은
 for(초기화; 조건식; 증감식)
 {if()
 break;}
 문이다.
 while문은 횟수를 정확하게 알지는 못하지만 반복의 조건을 알고 있을 때 사용한다.
 while문의 기본 형식은
 while(조건식)
{ 명령문 1; 명령문 2; 증감식} 으로 작성한다.
while문과 for문의 초기화 위치 비교를 하자면
for문은 괄호 안에서 초기화를 하지만 while문은 while문 외부에서 초기화한다.
for문에서도 for문 시작 전에 초기화를 할 수 있으나 일반적이지 않다.
무한 반복 종료되지 않는 반복문이고, 무한 반복에서 빠져나오려면 break문을 이용하거나 [shift]+[F5] 키를 눌러 디
버깅을 강제로 종료한다.
do~while문은 일단 do 안에 있는 명령문을 수행하고 나중에 while문의 조건식을 비교한다.
적어도 한 번은 명령문을 처리하고 마지막에 세미콜론(;)을 반드시 넣어야 한다.
do~while문의 기본 형식은 do{ 명령문 1; }while(조건식); 으로 작성이 된다.
goto문은 명령문의 실행 순서를 프로그래머가 임의로 변경하고자 할 때 사용한다.
실행 순서를 사용자가 지정한 라벨로 이동하고 라벨은 다른 명령문 앞에 선언하며, 라벨 다음에 콜론(:)을 넣음.
일반적으로 goto문은 잘 사용하지 않는다.
goto문의 기본형식은 goto 라벨(Label); 형식이다.
break문은 반복문을 빠져나오거나 switch~case문에서 정상적 흐름을 변경하기 위해 사용한다.
주로 goto문 대신에 쓰는 방법으로 switch~case문에서는 필수적으로 사용한다.
continue문은 반복문을 빠져나오지 않고 해당 반복문의 처음으로 프로그램의 흐름을 이동한다.
